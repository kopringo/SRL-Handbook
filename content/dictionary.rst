##########
Dictionary
##########


**Sphere Engine**
  Platforma do weryfikacji praktycznych umiejętności programistycznych. Posiada wbudowany zestaw kompilatorów oraz bazę zadań testowych. 
  System pozwala na automatyczną ocenę nadsyłanych rozwiązań, które dostarczane są w postaci kodów źródłowych.
  
**Sphere Contest**
  Platforma do weryfikacji praktycznych umiejętności programistycznych.  Posiada wbudowany zestaw kompilatorów oraz bazę zadań testowych. 
  System pozwala na automatyczną ocenę nadsyłanych rozwiązań, które dostarczane są w postaci kodów źródłowych.
         
**Problem**
  The challange task for service's users which is the basic element of the service and it contains:
  
  - Description: text explanation of the problem nature along with input/output specification (see more :ref:`Problem description <problem-description>`)
  - Test case: the set of input and output data along with a method of judging (see more :ref:`Test case <test-case>`)
  - Master judge: the method of final scoring the execution of the submitted solution
  
**Problem instance (input instance)**
  The set of data which determines all variables from the problem definition. For example 
  number *10* is an instance for *the prime number* problem (i.e. for a given number *n* 
  determine if *n* is a prime number).
  
**Test case**
  The set of data (usually pair of input file and correct output file) used for verification 
  of the user's submission. It serves as a certificate of the correctness and also contains:
  
  - **time limit** the maximum time of the user's solution execution with the data from input file
  - **tast case judge** a program that analyses the output generated by user's solution 
    (usually compares user's output with correct output) (see more :ref:`Judges <judges-simple>`, 
    :ref:`Advanced judges <judges-advanced>`)
  
**Submission** ­
  The source code which is potentially the correct solution to the problem.
  
**Submission status**
  short information about the user's submission execution. It can be one of the following: 
  *accepted*, *wrong answer*, *time limit exceeded*, *run time error*, *compile error* 
  (see more :ref:`Statuses <appendix-statuses>`)
  
**User**
  The programmer (developer).
  
**Problem setter** 
  User of the service with the permissions to create and manage problems.
  
**Manager**
  User of the service with the permissions to manage whole service's content.
  
**Administrator**
  User of the service with full set of permissions.
